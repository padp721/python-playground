[tool.poetry]
name = "unit-testing"
version = "0.1.0"
description = "Proyek sederhana melakukan linting dan unit testing di bahasa pemrograman Python."
authors = ["padp721 <anggadp91@gmail.com>"]
readme = "README.md"

[tool.poetry.scripts]
perhitungan_dasar = "unit_testing.perhitungan_dasar.__main__:main"


[tool.poetry.dependencies]
python = "^3.10"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pylint = "^3.2.3"
pytest-cov = "^5.0.0"


[tool.pylint.reports]
reports = "yes"
score = "yes"


[tool.pylint.refactoring]
max-nested-blocks = 5


[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
include-naming-hint = "no"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
variable-naming-style = "snake_case"

[tool.pylint.format]
indent-after-paren = 4
indent-string = "    "
max-line-length = 100
max-module-lines = 1000


[tool.pylint.message_control]
disable = """
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
"""


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cache-clear --verbose -rA --cov --cov-fail-under 75"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
